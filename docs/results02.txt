
Please enter parameters n and m to ackerman function.
Note that this function takes a long time to compute,
even for small values. Keep n at or below 3, and mat or
below 8. Otherwise, the function takes seemingly forever.
Enter 0 for either n or m in order to exit.

  n =   m =       n = 1, m = 1
Result of ackerman(1, 1): 3
Time taken for computation :  [sec = 0, musec = 138] 
Number of allocate/free cycles: 4



Please enter parameters n and m to ackerman function.
Note that this function takes a long time to compute,
even for small values. Keep n at or below 3, and mat or
below 8. Otherwise, the function takes seemingly forever.
Enter 0 for either n or m in order to exit.

  n =   m =       n = 1, m = 2
Result of ackerman(1, 2): 4
Time taken for computation :  [sec = 0, musec = 51] 
Number of allocate/free cycles: 6



Please enter parameters n and m to ackerman function.
Note that this function takes a long time to compute,
even for small values. Keep n at or below 3, and mat or
below 8. Otherwise, the function takes seemingly forever.
Enter 0 for either n or m in order to exit.

  n =   m =       n = 1, m = 3
Result of ackerman(1, 3): 5
Time taken for computation :  [sec = 0, musec = 75] 
Number of allocate/free cycles: 8



Please enter parameters n and m to ackerman function.
Note that this function takes a long time to compute,
even for small values. Keep n at or below 3, and mat or
below 8. Otherwise, the function takes seemingly forever.
Enter 0 for either n or m in order to exit.

  n =   m =       n = 1, m = 4
Result of ackerman(1, 4): 6
Time taken for computation :  [sec = 0, musec = 130] 
Number of allocate/free cycles: 10



Please enter parameters n and m to ackerman function.
Note that this function takes a long time to compute,
even for small values. Keep n at or below 3, and mat or
below 8. Otherwise, the function takes seemingly forever.
Enter 0 for either n or m in order to exit.

  n =   m =       n = 1, m = 5
Result of ackerman(1, 5): 7
Time taken for computation :  [sec = 0, musec = 110] 
Number of allocate/free cycles: 12



Please enter parameters n and m to ackerman function.
Note that this function takes a long time to compute,
even for small values. Keep n at or below 3, and mat or
below 8. Otherwise, the function takes seemingly forever.
Enter 0 for either n or m in order to exit.

  n =   m =       n = 1, m = 6
Result of ackerman(1, 6): 8
Time taken for computation :  [sec = 0, musec = 123] 
Number of allocate/free cycles: 14



Please enter parameters n and m to ackerman function.
Note that this function takes a long time to compute,
even for small values. Keep n at or below 3, and mat or
below 8. Otherwise, the function takes seemingly forever.
Enter 0 for either n or m in order to exit.

  n =   m =       n = 1, m = 7
Result of ackerman(1, 7): 9
Time taken for computation :  [sec = 0, musec = 105] 
Number of allocate/free cycles: 16



Please enter parameters n and m to ackerman function.
Note that this function takes a long time to compute,
even for small values. Keep n at or below 3, and mat or
below 8. Otherwise, the function takes seemingly forever.
Enter 0 for either n or m in order to exit.

  n =   m =       n = 1, m = 8
Result of ackerman(1, 8): 10
Time taken for computation :  [sec = 0, musec = 148] 
Number of allocate/free cycles: 18



Please enter parameters n and m to ackerman function.
Note that this function takes a long time to compute,
even for small values. Keep n at or below 3, and mat or
below 8. Otherwise, the function takes seemingly forever.
Enter 0 for either n or m in order to exit.

  n =   m =       n = 2, m = 1
Result of ackerman(2, 1): 5
Time taken for computation :  [sec = 0, musec = 142] 
Number of allocate/free cycles: 14



Please enter parameters n and m to ackerman function.
Note that this function takes a long time to compute,
even for small values. Keep n at or below 3, and mat or
below 8. Otherwise, the function takes seemingly forever.
Enter 0 for either n or m in order to exit.

  n =   m =       n = 2, m = 2
Result of ackerman(2, 2): 7
Time taken for computation :  [sec = 0, musec = 166] 
Number of allocate/free cycles: 27



Please enter parameters n and m to ackerman function.
Note that this function takes a long time to compute,
even for small values. Keep n at or below 3, and mat or
below 8. Otherwise, the function takes seemingly forever.
Enter 0 for either n or m in order to exit.

  n =   m =       n = 2, m = 3
Result of ackerman(2, 3): 9
Time taken for computation :  [sec = 0, musec = 329] 
Number of allocate/free cycles: 44



Please enter parameters n and m to ackerman function.
Note that this function takes a long time to compute,
even for small values. Keep n at or below 3, and mat or
below 8. Otherwise, the function takes seemingly forever.
Enter 0 for either n or m in order to exit.

  n =   m =       n = 2, m = 4
Result of ackerman(2, 4): 11
Time taken for computation :  [sec = 0, musec = 398] 
Number of allocate/free cycles: 65



Please enter parameters n and m to ackerman function.
Note that this function takes a long time to compute,
even for small values. Keep n at or below 3, and mat or
below 8. Otherwise, the function takes seemingly forever.
Enter 0 for either n or m in order to exit.

  n =   m =       n = 2, m = 5
Result of ackerman(2, 5): 13
Time taken for computation :  [sec = 0, musec = 705] 
Number of allocate/free cycles: 90



Please enter parameters n and m to ackerman function.
Note that this function takes a long time to compute,
even for small values. Keep n at or below 3, and mat or
below 8. Otherwise, the function takes seemingly forever.
Enter 0 for either n or m in order to exit.

  n =   m =       n = 2, m = 6
Result of ackerman(2, 6): 15
Time taken for computation :  [sec = 0, musec = 1080] 
Number of allocate/free cycles: 119



Please enter parameters n and m to ackerman function.
Note that this function takes a long time to compute,
even for small values. Keep n at or below 3, and mat or
below 8. Otherwise, the function takes seemingly forever.
Enter 0 for either n or m in order to exit.

  n =   m =       n = 2, m = 7
Result of ackerman(2, 7): 17
Time taken for computation :  [sec = 0, musec = 1011] 
Number of allocate/free cycles: 152



Please enter parameters n and m to ackerman function.
Note that this function takes a long time to compute,
even for small values. Keep n at or below 3, and mat or
below 8. Otherwise, the function takes seemingly forever.
Enter 0 for either n or m in order to exit.

  n =   m =       n = 2, m = 8
Result of ackerman(2, 8): 19
Time taken for computation :  [sec = 0, musec = 1213] 
Number of allocate/free cycles: 189



Please enter parameters n and m to ackerman function.
Note that this function takes a long time to compute,
even for small values. Keep n at or below 3, and mat or
below 8. Otherwise, the function takes seemingly forever.
Enter 0 for either n or m in order to exit.

  n =   m =       n = 3, m = 1
Result of ackerman(3, 1): 13
Time taken for computation :  [sec = 0, musec = 406] 
Number of allocate/free cycles: 106



Please enter parameters n and m to ackerman function.
Note that this function takes a long time to compute,
even for small values. Keep n at or below 3, and mat or
below 8. Otherwise, the function takes seemingly forever.
Enter 0 for either n or m in order to exit.

  n =   m =       n = 3, m = 2
Result of ackerman(3, 2): 29
Time taken for computation :  [sec = 0, musec = 2104] 
Number of allocate/free cycles: 541



Please enter parameters n and m to ackerman function.
Note that this function takes a long time to compute,
even for small values. Keep n at or below 3, and mat or
below 8. Otherwise, the function takes seemingly forever.
Enter 0 for either n or m in order to exit.

  n =   m =       n = 3, m = 3
Result of ackerman(3, 3): 61
Time taken for computation :  [sec = 0, musec = 6570] 
Number of allocate/free cycles: 2432



Please enter parameters n and m to ackerman function.
Note that this function takes a long time to compute,
even for small values. Keep n at or below 3, and mat or
below 8. Otherwise, the function takes seemingly forever.
Enter 0 for either n or m in order to exit.

  n =   m =       n = 3, m = 4
Result of ackerman(3, 4): 125
Time taken for computation :  [sec = 0, musec = 70824] 
Number of allocate/free cycles: 10307



Please enter parameters n and m to ackerman function.
Note that this function takes a long time to compute,
even for small values. Keep n at or below 3, and mat or
below 8. Otherwise, the function takes seemingly forever.
Enter 0 for either n or m in order to exit.

  n =   m =       n = 3, m = 5
Result of ackerman(3, 5): 253
Time taken for computation :  [sec = 0, musec = 160091] 
Number of allocate/free cycles: 42438



Please enter parameters n and m to ackerman function.
Note that this function takes a long time to compute,
even for small values. Keep n at or below 3, and mat or
below 8. Otherwise, the function takes seemingly forever.
Enter 0 for either n or m in order to exit.

  n =   m =       n = 3, m = 6
Result of ackerman(3, 6): 509
Time taken for computation :  [sec = 0, musec = 362903] 
Number of allocate/free cycles: 172233



Please enter parameters n and m to ackerman function.
Note that this function takes a long time to compute,
even for small values. Keep n at or below 3, and mat or
below 8. Otherwise, the function takes seemingly forever.
Enter 0 for either n or m in order to exit.

  n =   m =       n = 3, m = 7
Result of ackerman(3, 7): 1021
Time taken for computation :  [sec = 1, musec = 324741] 
Number of allocate/free cycles: 693964



Please enter parameters n and m to ackerman function.
Note that this function takes a long time to compute,
even for small values. Keep n at or below 3, and mat or
below 8. Otherwise, the function takes seemingly forever.
Enter 0 for either n or m in order to exit.

  n =   m =       n = 3, m = 8
Result of ackerman(3, 8): 2045
Time taken for computation :  [sec = 5, musec = 357034] 
Number of allocate/free cycles: 2785999



Please enter parameters n and m to ackerman function.
Note that this function takes a long time to compute,
even for small values. Keep n at or below 3, and mat or
below 8. Otherwise, the function takes seemingly forever.
Enter 0 for either n or m in order to exit.

  n = Reached end of Ackerman program. Thank you for using it.
